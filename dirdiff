#!/usr/bin/perl

# This chunk of stuff was generated by App::FatPacker. To find the original
# file's code, look for the end of this BEGIN block or the string 'FATPACK'
BEGIN {
my %fatpacked;

$fatpacked{"File/DirDiff.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'FILE_DIRDIFF';
  package File::DirDiff;use 5.008001;use strict;use warnings;use File::Find 'find';use Time::HiRes ();our$VERSION="0.01";sub new {my ($class,%arg)=@_;my$dir=$arg{dir}or die "Missing dir option";my$init=exists$arg{init}? $arg{init}: 1;my$self=bless {dir=>$dir },$class;$self->init if$init;$self}sub _find {my$self=shift;my$result={};my$wanted=sub {my$name=$File::Find::name;my$type=-l $name ? "symlink" : -f $name ? "file" : -d $name ? "dir" : "unknown";my$mtime=$type eq "symlink" ? (Time::HiRes::lstat$name)[9]: (Time::HiRes::stat$name)[9];my$symlink=$type eq "symlink" ? readlink$name : undef;$result->{$name}={name=>$name,type=>$type,mtime=>$mtime,($symlink ? (symlink=>$symlink): ()),}};find {wanted=>$wanted,no_chdir=>1},$self->{dir};return$result}sub init {my$self=shift;delete$self->{$_}for qw(before after);$self->{before}=$self->_find}sub diff {my ($self,$cb)=@_;my$before=$self->{before}or die;my$after=$self->{after}=$self->_find;my%seen;for my$name (sort keys %$before){my$old=$before->{$name};if (my$new=$after->{$name}){if ($old->{mtime}!=$new->{mtime}&&!($old->{type}eq "dir" && $new->{type}eq "dir")){$cb->($old,$new)}}else {$cb->($old,undef)}$seen{$name}++}for my$name (grep {!$seen{$_}}sort keys %$after){$cb->(undef,$after->{$name})}}1;
FILE_DIRDIFF

s/^  //mg for values %fatpacked;

my $class = 'FatPacked::'.(0+\%fatpacked);
no strict 'refs';
*{"${class}::files"} = sub { keys %{$_[0]} };

if ($] < 5.008) {
  *{"${class}::INC"} = sub {
     if (my $fat = $_[0]{$_[1]}) {
       return sub {
         return 0 unless length $fat;
         $fat =~ s/^([^\n]*\n?)//;
         $_ = $1;
         return 1;
       };
     }
     return;
  };
}

else {
  *{"${class}::INC"} = sub {
    if (my $fat = $_[0]{$_[1]}) {
      open my $fh, '<', \$fat
        or die "FatPacker error loading $_[1] (could be a perl installation issue?)";
      return $fh;
    }
    return;
  };
}

unshift @INC, bless \%fatpacked, $class;
  } # END OF FATPACK CODE

use strict;
use warnings;
use utf8;
use File::DirDiff;
use Pod::Usage 'pod2usage';
sub say { print @_, "\n" }
pod2usage(1) if !@ARGV || $ARGV[0] =~ /^(-h|--help)$/;
my $dir = shift;
die "'$dir' is not a directory\n" unless -d $dir;

my @command = @ARGV or pod2usage(1);

my $watcher = File::DirDiff->new(dir => $dir);
my $status = system {$ARGV[0]} @ARGV;

my $D = $ENV{NO_COLOR} ? "D" : "\e[31mD\e[m";
my $A = $ENV{NO_COLOR} ? "A" : "\e[32mA\e[m";
my $M = $ENV{NO_COLOR} ? "M" : "\e[33mM\e[m";

$watcher->diff(sub {
    my ($old, $new) = @_;
    if (!$new) {
        say "$D $old->{name}";
    } elsif (!$old) {
        say "$A $new->{name}";
    } else {
        say "$M $old->{name}";
    }
});

if ($status == 0) {
    exit 0;
} else {
    my $code = ($status >> 8) || 255;
    exit $code;
}

__END__

=head1 NAME

dirdiff - report directory diff after some command execution

=head1 SYNOPSIS

    > dirdiff DIRECTORY COMMANDS

    Eg:
        > dirdiff ./local cpanm -Llocal Plack
        > dirdiff $HOME/local bash -c "./configure --prefix=$HOME/local && make install"

=head1 AUTHOR

Shoichi Kaji

=cut
